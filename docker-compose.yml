services:
    # PostgreSQL Database
    postgres:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: fleek_media
            POSTGRES_USER: fleek
            POSTGRES_PASSWORD: fleek123
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U fleek -d fleek_media"]
            interval: 30s
            timeout: 10s
            retries: 3

    # Redis for Celery
    redis:
        image: redis:7-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3

    # FastAPI Application
    api:
        build: .
        command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
        ports:
            - "8000:8000"
        volumes:
            - .:/app
            - ./storage:/app/storage
        env_file:
            - config.env
        environment:
            - DATABASE_URL=postgresql+asyncpg://fleek:fleek123@postgres:5432/fleek_media
            - DATABASE_URL_SYNC=postgresql://fleek:fleek123@postgres:5432/fleek_media
            - REDIS_URL=redis://redis:6379/0
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy

    # Celery Worker
    worker:
        build: .
        command: celery -A app.tasks.celery_app worker --loglevel=info
        volumes:
            - .:/app
            - ./storage:/app/storage
        env_file:
            - config.env
        environment:
            - DATABASE_URL=postgresql+asyncpg://fleek:fleek123@postgres:5432/fleek_media
            - DATABASE_URL_SYNC=postgresql://fleek:fleek123@postgres:5432/fleek_media
            - REDIS_URL=redis://redis:6379/0
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy

    # Celery Flower (Optional - for monitoring)
    flower:
        build: .
        command: celery -A app.tasks.celery_app flower --port=5555
        ports:
            - "5555:5555"
        environment:
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        depends_on:
            - redis

volumes:
    postgres_data:
    redis_data:
